name: Build and Deploy to Lambda

on:
  workflow_dispatch:
    inputs:
      function_name:
        description: "Override Lambda function name (optional). If empty, uses LAMBDA_FUNCTION_NAME environment variable."
        required: false
        default: ""
  push:
    branches:
      - 'deploy/lambda'

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Download deps
        run: go mod download

      - name: Build Lambda bootstrap
        run: |
          go build \
            -ldflags "-s -w -X main.buildTime=$(date --utc +%Y-%m-%dT%H:%M:%SZ) -X main.commitHash=${{ github.sha }} -X main.version=${{ github.ref_name }}" \
            -tags netgo -trimpath \
            -o ./bootstrap .

      - name: Prepare code artifacts
        run: |
          mkdir -p lambda-artifacts
          mv -f bootstrap lambda-artifacts/bootstrap
          cp -r static lambda-artifacts/static
          ls -la lambda-artifacts

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          audience: ${{ secrets.AWS_AUDIENCE }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEPLOY_LAMBDA }}
          #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEPLOY_LAMBDA }}

      - name: Resolve Lambda function name
        id: resolve-fn
        run: |
          FN_IN="${{ inputs.function_name }}"
          if [ -n "${FN_IN}" ]; then
            echo "Using function name from manual input: ${FN_IN}"
            echo "name=${FN_IN}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if [ -z "${{ vars.LAMBDA_FUNCTION_NAME }}" ]; then
            echo "LAMBDA_FUNCTION_NAME variable is required when no manual input is provided" >&2
            exit 1
          fi
          echo "Using function name from secret"
          echo "name=${{ vars.LAMBDA_FUNCTION_NAME }}" >> "$GITHUB_OUTPUT"

      - name: Set Lambda architecture
        run: |
          if [ "$GOARCH" = "arm64" ]; then
            echo "LAMBDA_ARCH=arm64" >> $GITHUB_ENV
          else
            echo "LAMBDA_ARCH=x86_64" >> $GITHUB_ENV
          fi

      - name: Deploy Lambda Function
        id: lambda-deploy
        uses: aws-actions/aws-lambda-deploy@v1
        with:
          function-name: ${{ steps.resolve-fn.outputs.name }}
          code-artifacts-dir: lambda-artifacts
          architectures: ${{ env.LAMBDA_ARCH }}
          runtime: provided.al2023
          handler: bootstrap
          publish: true
          role: ${{ secrets.LAMBDA_EXECUTION_ROLE }}
          s3-bucket: "${{ vars.BUCKET }}"
          environment: '{"NCLIP_DYNAMO_TABLE":"${{ vars.NCLIP_DYNAMODB_TABLE }}","GIN_MODE":"release"}'

      - name: Post-deploy info
        run: |
          echo "Function ARN: ${{ steps.lambda-deploy.outputs.function-arn }}"
          echo "Version:      ${{ steps.lambda-deploy.outputs.version }}"
