# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: nclip
  labels:
    name: nclip

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nclip-config
  namespace: nclip
data:
  NCLIP_STORAGE_TYPE: "mongodb"
  NCLIP_MONGODB_DATABASE: "nclip"
  NCLIP_MONGODB_COLLECTION: "pastes"
  NCLIP_DOMAIN: "paste.example.com"
  NCLIP_HTTP_PORT: "8080"
  NCLIP_TCP_PORT: "9999"
  NCLIP_EXPIRE_DAYS: "30"
  NCLIP_LOG_LEVEL: "info"
  NCLIP_ENABLE_METRICS: "true"
  NCLIP_ENABLE_WEBUI: "true"
  NCLIP_RATE_LIMIT: "20/min"

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: nclip-secrets
  namespace: nclip
type: Opaque
stringData:
  NCLIP_MONGODB_URI: "mongodb://nclip-user:your-secure-password@mongodb-service:27017/nclip?authSource=admin"
  MONGODB_ROOT_PASSWORD: "your-mongodb-root-password"
  MONGODB_USERNAME: "nclip-user"
  MONGODB_PASSWORD: "your-secure-password"

---
# PersistentVolumeClaim for MongoDB data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: nclip
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  # storageClassName: fast-ssd  # Use appropriate storage class

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: nclip
  labels:
    app: mongodb
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb
  type: ClusterIP

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: nclip
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nclip-secrets
              key: MONGODB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          value: "nclip"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-init
        configMap:
          name: mongodb-init-script

---
# ConfigMap for MongoDB initialization script
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: nclip
data:
  init.js: |
    // MongoDB initialization script
    db = db.getSiblingDB('nclip');
    
    // Create user for nclip application
    db.createUser({
      user: "nclip-user",
      pwd: "your-secure-password",
      roles: [
        {
          role: "readWrite",
          db: "nclip"
        }
      ]
    });
    
    // Create the pastes collection with schema validation
    db.createCollection('pastes', {
      validator: {
        $jsonSchema: {
          bsonType: "object",
          required: ["_id", "content", "created_at", "expires_at"],
          properties: {
            _id: { bsonType: "string" },
            content: { bsonType: "binData" },
            content_type: { bsonType: "string" },
            created_at: { bsonType: "date" },
            expires_at: { bsonType: "date" }
          }
        }
      }
    });
    
    // Create TTL index for automatic expiration
    db.pastes.createIndex(
      { "expires_at": 1 }, 
      { expireAfterSeconds: 0 }
    );
    
    // Create performance indexes
    db.pastes.createIndex({ "created_at": 1 });
    db.pastes.createIndex({ "client_ip": 1 });
    
    print("MongoDB nclip database initialized!");

---
# Nclip Service
apiVersion: v1
kind: Service
metadata:
  name: nclip-service
  namespace: nclip
  labels:
    app: nclip
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: tcp
      port: 9999
      targetPort: 9999
  selector:
    app: nclip
  type: LoadBalancer  # Change to ClusterIP if using Ingress

---
# Nclip Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nclip
  namespace: nclip
  labels:
    app: nclip
spec:
  replicas: 3  # Horizontal scaling
  selector:
    matchLabels:
      app: nclip
  template:
    metadata:
      labels:
        app: nclip
    spec:
      containers:
      - name: nclip
        image: your-registry/nclip:latest  # Replace with your image
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9999
          name: tcp
        envFrom:
        - configMapRef:
            name: nclip-config
        - secretRef:
            name: nclip-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"  
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nclip-hpa
  namespace: nclip
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nclip
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
